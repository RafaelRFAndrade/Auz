name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Convert coverage to SonarQube format
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"./coverage/**/coverage.cobertura.xml" -targetdir:"./coverage/report" -reporttypes:"SonarQube"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.cs.opencover.reportsPaths=./coverage/report/SonarQube.xml
          -Dsonar.coverage.exclusions=**/Test/**,**/bin/**,**/obj/**,**/Program.cs
          -Dsonar.exclusions=**/bin/**,**/obj/**,**/Test/**,**/scripts/**,**/*.csproj,**/*.sln,**/Dockerfile*,**/aws/**,**/.github/**,**/.sonarqube/**
          -Dsonar.cpd.exclusions=**/bin/**,**/obj/**
          -Dsonar.ci.automaticAnalysis=false
          -Dsonar.ci.branch.name=${{ github.ref_name }}
          -Dsonar.ci.branch.target=${{ github.base_ref }}

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: SonarCloud Quality Gate
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.qualitygate.wait=true
          -Dsonar.ci.automaticAnalysis=false
